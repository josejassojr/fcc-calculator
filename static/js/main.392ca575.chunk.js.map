{"version":3,"sources":["reportWebVitals.js","evaluate.js","Footer.js","Calculator.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","roundEval","x","strEval","String","length","parts","split","round","Math","Number","EPSILON","evaluate","operands","operators","firstOperand","secOperand","i","oper","num1","num2","temp","splice","ret","num","evalImmediate","thirdOperand","firstOperator","secOperator","Footer","className","id","href","target","rel","class","Calculator","state","display","on","negative","eval","decimal","handleClick","bind","document","onkeypress","handleKeyPress","this","dis","currOperators","currOperands","currNegative","currDecimal","currEval","console","log","concat","setState","slice","push","event","key","getElementById","click","onClick","React","Component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.392ca575.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const evaluate = (operands, operators) => {\n  if (operands.length === 2) {\n    var firstOperand = Number(operands[0]);\n    var secOperand = Number(operands[1]);\n    var operator = operators[0];\n    switch (operator) {\n      case \"x\":\n        return roundEval(firstOperand * secOperand);\n      case \"+\":\n        return roundEval(firstOperand + secOperand);\n      case \"-\":\n        return roundEval(firstOperand - secOperand);\n      case \"รท\":\n        return roundEval(firstOperand / secOperand);\n      default:\n        return;\n    }\n  } else if (operands.length === 3) {\n    /* must be 3 operands and 2 operators if its not 2 and 1 */\n    // console.log(\"hello\")\n     firstOperand = Number(operands[0]);\n     secOperand = Number(operands[1]);\n    var thirdOperand = Number(operands[2]);\n\n    var firstOperator = operators[0];\n    var secOperator = operators[1];\n\n    switch (firstOperator) {\n      case \"x\":\n      case \"รท\":\n        if (firstOperator === \"x\") {\n          var temp = firstOperand * secOperand;\n        } else {\n           temp = firstOperand / secOperand;\n        }\n        switch (secOperator) {\n          case \"x\":\n            return roundEval(temp * thirdOperand);\n          case \"+\":\n            return roundEval(temp + thirdOperand);\n          case \"รท\":\n            return roundEval(temp / thirdOperand);\n          case \"-\":\n            return roundEval(temp - thirdOperand);\n          default:\n            return;\n        }\n      case \"-\":\n        switch (secOperator) {\n          case \"x\":\n          case \"รท\":\n            if (secOperator === \"x\") {\n               temp = secOperand * thirdOperand;\n            } else {\n               temp = secOperand / thirdOperand;\n            }\n            return roundEval(firstOperand - temp);\n          case \"+\":\n            return roundEval(firstOperand - secOperand + thirdOperand);\n          default:\n            return roundEval(firstOperand - secOperand - thirdOperand);\n        }\n      case \"+\":\n        switch (secOperator) {\n          case \"x\":\n             temp = secOperand * thirdOperand;\n            break;\n          case \"+\":\n             temp = secOperand + thirdOperand;\n            break;\n          case \"รท\":\n             temp = secOperand / thirdOperand;\n            break;\n          case \"-\":\n             temp = secOperand - thirdOperand;\n            break;\n          default:\n             temp = 0;\n            break;\n        }\n        switch (firstOperator) {\n          case \"+\":\n            return roundEval(firstOperand + temp);\n          case \"-\":\n            return roundEval(firstOperand - temp);\n          default:\n            return roundEval(temp);\n        }\n      default:\n        return -1;\n    }\n  } else {\n    var i = 0;\n    while (i < operators.length) {\n      // console.log(oper);\n      let oper = operators[i];\n      if (oper === \"x\" || oper === \"รท\") {\n        let num1 = Number(operands[i]);\n        let num2 = Number(operands[i + 1]);\n        let temp;\n        if (oper === \"x\") {\n          temp = num1 * num2;\n          // console.log(temp);\n        } else {\n          temp = num1 / num2;\n          // console.log(temp);\n        }\n        operands.splice(i, 2, String(temp));\n        operators.splice(i, 1);\n      } else {\n        i += 1;\n      }\n    }\n    if (operators.length === 0) {\n      return roundEval(operands[0]);\n    }\n    if (operators.length === 1) {\n      if (operators[0] === \"+\") {\n        return roundEval(Number(operands[0]) + Number(operands[1]));\n      } else {\n        return roundEval(Number(operands[0]) - Number(operands[1]));\n      }\n    } else {\n      return evalImmediate(operands, operators);\n    }\n    // console.log(operators);\n    // console.log(operands);\n  }\n};\n\nfunction evalImmediate(operands, operators) {\n  var oper = operators[0];\n  let ret;\n  if (oper === \"+\") {\n    ret = Number(operands[0]) + Number(operands[1]);\n  } else {\n    ret = operands[0] - operands[1];\n  }\n  operands.splice(0, 2);\n  operators.splice(0, 1);\n  // console.log(operands);\n  // console.log(operators);\n\n  for (let i = 0; i < operators.length; i++) {\n    oper = operators[i];\n    var num = Number(operands[i]);\n    if (oper === \"+\") {\n      ret += num;\n    } else {\n      ret -= num;\n    }\n  }\n  return roundEval(ret);\n}\n\nfunction roundEval(x) {\n  let strEval = String(x);\n  let ret;\n  if (strEval.length > 16) { \n    let parts = strEval.split(\".\");\n    if (parts.length === 2) {\n      let round = 16 - parts[0].length;\n      // Math.round((num + Number.EPSILON) * 100) / 100;\n      ret = Math.round((x + Number.EPSILON) * (10 ** round)) / (10 ** round);\n      return ret\n    } else { /* means that eval is greater than 16 and yet the answer is too long. Need to return answer too big and start over */\n      return \"TOO LARGE\";\n    }\n  } else {\n    return x;\n  }\n}\nexport default evaluate;\n","// CSS and Modules\nimport \"./Footer.css\";\nimport React from \"react\";\n\nfunction Footer() {\n  return (\n    /* jshint ignore:start */\n    <footer className=\"Footer\">\n      Created by Jose Jasso Jr.{\" \"}\n      <div id=\"footer-buttons\">\n        <a\n          href=\"https://www.josejassojr.com/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"footer-button\"\n        >\n          <i class=\"fas fa-laptop-code\"></i>\n        </a>\n        <a\n          href=\"https://www.linkedin.com/in/josejassojr/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"footer-button\"\n        >\n          <i class=\"fab fa-linkedin\"></i>\n        </a>\n        <a\n          href=\"https://github.com/josejassojr\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"footer-button\"\n        >\n          <i class=\"fab fa-github\"></i>\n        </a>\n        <a\n          href=\"mailto:jose.d.jassojr@gmail.com\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          className=\"footer-button\"\n        >\n          <i class=\"far fa-envelope\"></i>\n        </a>\n      </div>\n    </footer>\n    /* jshint ignore:end */\n  );\n}\nexport default Footer;\n","import React from \"react\";\nimport evaluate from \"./evaluate\";\nimport Footer from \"./Footer\";\n\nclass Calculator extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      display: \"\",\n      on: false,\n      operators: [],\n      operands: [],\n      negative: false,\n      eval: false,\n      decimal: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    document.onkeypress = this.handleKeyPress;\n  }\n\n  handleClick(x) {\n    if (x === \"off\") {\n      this.setState({\n        display: \"\",\n        on: false,\n        operators: [],\n        operands: [],\n        negative: false,\n        eval: false,\n        decimal: false,\n      });\n      // const operands = [\"1\", \"1\", \"1\",\"1\",\"1\",\"1\"];     /* used for testing evaluate function in evaluate.js */\n      // const operators = [\"+\",\"+\",\"+\",\"+\",\"+\"];\n      // console.log(\"hello\");\n      // console.log(evaluate(operands, operators));\n\n      return;\n    }\n    if (x === \"AC\") {\n      this.setState({\n        display: \"0\",\n        on: true,\n        operators: [],\n        operands: [],\n        negative: false,\n        eval: false,\n        decimal: false,\n      });\n      // console.log(this.state);\n      return;\n    }\n\n    let currOn = this.state.on;\n    if (!currOn) {\n      return;\n    }\n    // console.log(this.state.display);\n    let dis = this.state.display;\n    let currOperators = this.state.operators;\n    let currOperands = this.state.operands;\n    let currNegative = this.state.negative;\n    let currDecimal = this.state.decimal;\n    let currEval = this.state.eval;\n    console.log([\n      \"display is: \".concat(dis),\n      \"operators: \".concat(currOperators),\n      \"operands: \".concat(currOperands),\n      \"negative: \".concat(currNegative),\n      \"decimal: \".concat(currDecimal),\n      \"eval: \".concat(currEval),\n    ]);\n    if (dis === \"TOO LARGE\") {\n      return;\n    }\n    switch (x) {\n      // case that its an operator button clicked\n      case \"x\":\n      case \"+\":\n      case \"รท\":\n      case \"-\":\n        if (x === \"-\") {\n          /* minus sign check because you could be inputting the beginning of a negative number instead of subtracting */\n          switch (dis) {\n            // means i am beginning a negative number so add operator to operator list and set display to '-'\n            case \"x\":\n            case \"+\":\n            case \"-\":\n            case \"รท\":\n              this.setState({\n                operators: [...currOperators, dis],\n                display: \"-\",\n                negative: true,\n              });\n              return;\n            case \"0\":\n              if (currOperands.length === 0) {\n                this.setState({\n                  display: \"-\",\n                  negative: true,\n                  eval: false,\n                });\n                return;\n              }\n              break;\n            default:\n              this.setState({\n                display: \"-\",\n                operands: [...currOperands, dis],\n                eval: false,\n              });\n              return;\n          }\n        } else {\n          /* means i pressed any other operator button */\n          switch (dis) {\n            case \"x\":\n            case \"+\":\n            case \"รท\":\n              this.setState({\n                display: x,\n              });\n              return;\n            case \"-\":\n              if (currNegative) {\n                if (currOperators.length > 0) {\n                  this.setState({\n                    operators: currOperators.slice(0, -1),\n                    display: x,\n                    negative: false,\n                  });\n                } else {\n                  this.setState({\n                    display: \"0\",\n                    negative: false,\n                  });\n                }\n                return;\n              } else {\n                this.setState({\n                  display: x,\n                });\n                return;\n              }\n            case \"0\":\n              if (currOperands.length === 0) {\n                return;\n              }\n              break;\n            default:\n              this.setState({\n                display: x,\n                operands: [...currOperands, dis],\n                eval: false,\n              });\n              return;\n          }\n        }\n        break;\n      case \".\":\n        switch (dis) {\n          case \"x\":\n          case \"+\":\n          case \"รท\":\n            this.setState({\n              display: \"0.\",\n              decimal: true,\n              operators: [...currOperators, dis],\n            });\n            return;\n          case \"-\":\n            if (currNegative) {\n              this.setState({\n                display: \"-0.\",\n                decimal: true,\n              });\n              return;\n            } else {\n              this.setState({\n                display: \"0.\",\n                decimal: true,\n                operators: [...currOperators, dis],\n              });\n              return;\n            }\n          default:\n            /* a number is being currently displayed */\n            if (currEval) {\n              this.setState({\n                display: \"0.\",\n                eval: false,\n              });\n              return;\n            } else {\n              if (currDecimal) {\n                return;\n              } else {\n                this.setState({\n                  display: dis.concat(\".\"),\n                  decimal: true,\n                });\n                return;\n              }\n            }\n        }\n\n      case \"=\":\n        switch (dis) {\n          case \"x\":\n          case \"+\":\n          case \"-\":\n          case \"รท\":\n            break;\n          default:\n            currOperands.push(dis);\n        }\n\n        // console.log(\"hi\");\n        // var operands = this.state.operands;\n        // var operators = this.state.operators;\n        // console.log(operands);\n        // console.log(operators);\n        var ret = evaluate(currOperands, currOperators);\n        // console.log(ret);\n        this.setState(\n          {\n            display: ret,\n            operators: [],\n            operands: [],\n            negative: false,\n            eval: true,\n            decimal: false,\n          },\n          () => console.log(this.state)\n        );\n        return;\n\n      default:\n        /* pressed any digit */\n        switch (dis) {\n          case \"0\":\n            this.setState({\n              display: x,\n              decimal: false,\n            });\n            // console.log(this.state);\n            return;\n          case \"x\":\n          case \"+\":\n          case \"รท\":\n            this.setState({\n              operators: [...currOperators, dis],\n              display: x,\n              decimal: false,\n            });\n            // console.log(this.state);\n            return;\n          case \"-\":\n            if (currNegative) {\n              this.setState({\n                negative: false,\n                display: \"-\".concat(x),\n                decimal: false,\n              });\n              // console.log(this.state);\n              return;\n            } else {\n              this.setState({\n                operators: [...currOperators, \"-\"],\n                display: x,\n                decimal: false,\n              });\n              // console.log(this.state);\n              return;\n            }\n          default:\n            if (currEval) {\n              this.setState({\n                display: x,\n                eval: false,\n              });\n              return;\n            } else {\n              if (dis.length >= 16) {\n                return;\n              }\n              this.setState({\n                display: dis.concat(x),\n              });\n            }\n        }\n    }\n  }\n\n  handleKeyPress(event) {\n    let k = event.key;\n    switch (k) {\n      case \"=\":\n      case \"Enter\":\n        document.getElementById(\"equals\").click();\n        break;\n      case \"0\":\n        document.getElementById(\"zero\").click();\n        break;\n      case \"1\":\n        document.getElementById(\"one\").click();\n        break;\n      case \"2\":\n        document.getElementById(\"two\").click();\n        break;\n      case \"3\":\n        document.getElementById(\"three\").click();\n        break;\n      case \"4\":\n        document.getElementById(\"four\").click();\n        break;\n      case \"5\":\n        document.getElementById(\"five\").click();\n        break;\n      case \"6\":\n        document.getElementById(\"six\").click();\n        break;\n      case \"7\":\n        document.getElementById(\"seven\").click();\n        break;\n      case \"8\":\n        document.getElementById(\"eight\").click();\n        break;\n      case \"9\":\n        document.getElementById(\"nine\").click();\n        break;\n      case \"+\":\n        document.getElementById(\"add\").click();\n        break;\n      case \"-\":\n        document.getElementById(\"subtract\").click();\n        break;\n      case \"x\":\n      case \"*\":\n        document.getElementById(\"multiply\").click();\n        break;\n      case \"/\":\n        document.getElementById(\"divide\").click();\n        break;\n      case \".\":\n        document.getElementById(\"decimal\").click();\n        break;\n      case \"b\":\n        document.getElementById(\"off\").click();\n        break;\n      case \" \":\n        document.getElementById(\"clear\").click();\n        break;\n      default:\n        return;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"main-container\">\n          <div id=\"display\">{this.state.display}</div>\n          <div id=\"on-off-container\">\n            <button\n              className=\"on-off\"\n              id=\"clear\"\n              onClick={() => this.handleClick(\"AC\")}\n            >\n              AC/ON\n            </button>\n            <button\n              className=\"on-off\"\n              id=\"off\"\n              onClick={() => this.handleClick(\"off\")}\n            >\n              OFF\n            </button>\n          </div>\n          <div id=\"main-grid\">\n            <button\n              className=\"number\"\n              id=\"one\"\n              onClick={() => this.handleClick(\"1\")}\n            >\n              1\n            </button>\n            <button\n              className=\"number\"\n              id=\"two\"\n              onClick={() => this.handleClick(\"2\")}\n            >\n              2\n            </button>\n            <button\n              className=\"number\"\n              id=\"three\"\n              onClick={() => this.handleClick(\"3\")}\n            >\n              3\n            </button>{\" \"}\n            <button\n              className=\"operation\"\n              id=\"divide\"\n              onClick={() => this.handleClick(\"รท\")}\n            >\n              รท\n            </button>\n            <button\n              className=\"number\"\n              id=\"four\"\n              onClick={() => this.handleClick(\"4\")}\n            >\n              4\n            </button>\n            <button\n              className=\"number\"\n              id=\"five\"\n              onClick={() => this.handleClick(\"5\")}\n            >\n              5\n            </button>\n            <button\n              className=\"number\"\n              id=\"six\"\n              onClick={() => this.handleClick(\"6\")}\n            >\n              6\n            </button>{\" \"}\n            <button\n              className=\"operation\"\n              id=\"multiply\"\n              onClick={() => this.handleClick(\"x\")}\n            >\n              x\n            </button>\n            <button\n              className=\"number\"\n              id=\"seven\"\n              onClick={() => this.handleClick(\"7\")}\n            >\n              7\n            </button>\n            <button\n              className=\"number\"\n              id=\"eight\"\n              onClick={() => this.handleClick(\"8\")}\n            >\n              8\n            </button>\n            <button\n              className=\"number\"\n              id=\"nine\"\n              onClick={() => this.handleClick(\"9\")}\n            >\n              9\n            </button>{\" \"}\n            <button\n              className=\"operation\"\n              id=\"subtract\"\n              onClick={() => this.handleClick(\"-\")}\n            >\n              -\n            </button>{\" \"}\n            <button\n              className=\"operation\"\n              id=\"decimal\"\n              onClick={() => this.handleClick(\".\")}\n            >\n              .\n            </button>\n            <button\n              className=\"number\"\n              id=\"zero\"\n              onClick={() => this.handleClick(\"0\")}\n            >\n              0\n            </button>\n            <button id=\"equals\" onClick={() => this.handleClick(\"=\")}>\n              =\n            </button>\n            <button\n              className=\"operation\"\n              id=\"add\"\n              onClick={() => this.handleClick(\"+\")}\n            >\n              +\n            </button>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Calculator from './Calculator';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}